name: CI

on: [pull_request]

jobs:
  ubuntu-build:
    name: ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        python-version: [3.6, 3.7]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Python Style Checker
      uses: andymckay/pycodestyle-action@0.1.3

    - name: Test with pytest
      run: |
        pip install pytest pytest-cov coveralls coverage==4.5.4
        pytest tests/unit --cov=tabpy --cov-append
        pytest tests/integration --cov=tabpy --cov-append
        coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        
    - name: Markdownlint
      uses: nosborn/github-action-markdown-cli@v1.1.1
      with:
        files: .

  windows-build:
    name: ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        python-version: [3.7]
        os: [windows-latest]

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test with pytest
      run: |
        pip install pytest pytest-cov coveralls
        pytest tests/unit
        pytest tests/integration

  mac-build:
    name: ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        python-version: [3.7]
        os: [macos-latest]

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test with pytest
      run: |
        pip install pytest pytest-cov coveralls
        pytest tests/unit
        pytest tests/integration
        